[{"categories":null,"content":"Knock Knock 首先，欢迎你造访我的博客！你的到来增添了这个小院的一点生机。 也欢迎你在任何地方随时留言，这对我很重要。 ","date":"2022-06-01","objectID":"/about/:1:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"什么是 Ush Terek Ush Terek是索尔仁尼琴的小说《癌症楼》中，科斯托格洛托夫被流放到的中亚村庄。它荒芜、贫穷，远离俄罗斯文明，却是奥列格和他的流放犯朋友心中美好的天堂。 乌什-捷列克 奥列格一边在这个树多、人多、色彩多样、砖房座座的医疗中心的小径上漫步，一边满怀深情地回忆起乌什-捷列克那个世界里平坦无奇的一草一木。那个平淡无奇的世界对他来说是更为可贵的，因为那是他自己的世界，至死是自己的，永远是自己的世界，而这里却是临时的，暂住的。 …… 不要相信什么预兆和先声，不要相信什么贝多芬式的叩门声！这一切都是虚幻的泡影。横下一条心，不存任何幻想！对未来不抱任何希望，不抱美好未来的幻想！ 有什么就满足于什么！ 永久——那就永久好了。 ——《癌症楼》, 译林出版社, 242 页 \u0026 251 页 ","date":"2022-06-01","objectID":"/about/:2:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"这里会有什么？ 首先，对博客各种功能的维护和更新应该会始终持续进行，如果你想到什么有趣的功能，也可以留言给我。 其次，我坚信这个世界本不应该有这么多壁垒，因此我希望这里会有你想得到或者想不到的各种内容，包括设计、技术、规则、艺术和小说等等。我隐隐感到，在各种类别的知识体系下，深深埋藏着同一套逻辑，我们每次新的学习，只是为了解它提供了一个新的视角。 总而言之，我会把我想分享的内容都毫无保留地放在这里。也希望看到这里的朋友建立自己的站点，给我一个理由开发友链的功能。  希望在几年之后，当我回望这个博客的诞生，和它承载的时代的痕迹时，能够为困顿之时拥有它而感到幸运。也希望能在未来拥有一份杂志，这个博客或许是一个不错的开始。共勉。 ","date":"2022-06-01","objectID":"/about/:3:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"Why？ 是的，各种各样的社交平台很发达，微博和抖音让我随时可以看到各种新奇的新闻，豆瓣给我展示着陌生个体的世界，微信和朋友圈则让我和朋友们能随时通讯，如果为了内容的话，小红书、知乎和 Bilibili 开放给每个用户，在那里发言完全可以获得更大的曝光量和关注。现在，我们似乎从来不需要面临无处表达的烦恼，不会像10多年前的拨号上网的用户一样，珍惜QQ空间和新浪博客带给我们的新奇世界。 但是，这真的好吗？ 最近几年，我想我们所有人都见证了中文互联网世界的剧变，公开分享，逐渐变得危险而没有必要。分享知识的平台变成谎言和广告的领地，记录心情的地方充满着对立、戾气，在朋友圈的交际之中，相对封闭的社交圈层的瓦解困扰着我们变得谨慎、多疑，最后还是归于沉默。但我相信，表达和交流依旧是这密实的空气中每个人能做的、也是应该尽可能做的事情，我们依旧有太多不知道的东西，有太多偏见，有太多推荐算法预测不到的兴趣。 我记得在某个博客的主页看到过这样的表述，博客其实只是这个虚拟世界的一个岛屿而已。它的意义十分有限，它的价值同样狭小不堪，相比于各种各样轻松注册的平台，光是建立起这个站点就耗费了大量的时间。但正是因为这些数不清的缺点，我才选择了它。 ","date":"2022-06-01","objectID":"/about/:4:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"更新日志 2022.05.21 | 首次建站 2022.05.25 | 尝试了一系列评论系统，最后选用 giscus 2022.05.26 | 使用 fancybox 实现图片放大，初步研究了图床的设置 2022.05.27 | 添加不蒜子的统计功能 2022.05.28 | 完成 shields.io 和 Google Analytics 的设置 2022.06.01 | 更新了主题版本，从 0.2.07 到 0.2.11 ，没有解决 giscus 评论在具体页面显示的问题。成功设置了豆瓣图书和影音的卡片显示，但是音乐卡片的 api 接口还没有找到 2022.06.02 | 解决 giscus 问题 2022.06.03 | 解决隐藏文章的问题 2022.06.15 | 增加了 RSS 订阅功能，以及解决了其他设备同步库的问题 ","date":"2022-06-01","objectID":"/about/:5:0","tags":null,"title":"关于","uri":"/about/"},{"categories":["Blog"],"content":"为什么我觉得大家都应该用 RSS，以及使用 RSS 的教程和一些慢慢更新的推荐的订阅源","date":"2022-06-14","objectID":"/20220614-rss/","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"Why RSS? 我经常会在失眠的夜晚，刷着小红书，痛恨大数据为我们精心策划的人生。好像我们一下子就习惯了很容易看到喜欢的内容的生活，久而久之，我都快忘记了小时候站在报刊亭前，面对着琳琅满目我从没听说过的杂志们的兴奋感。因为在哥哥家里看到《看电影》的杂志，我开始一发不可收拾地爱上看电影；因为在初中的书店偶然买到一本《Hobby Japan》，我得以一窥模型的隐秘世界，或许这也是我对会做模型的建筑系产生向往的原因之一。当然，我明白现在要接触到这些信息比那个时候要容易太多，你总可以找到无论多么冷门的电影资源，大佬们制作的做模型的视频也比比皆是。然而，什么能比得上我站在杂志店的那个充满期待和惊喜的瞬间呢？ 回到正题，你们有没有发现小红书的推荐非常好训练？我经常故意折腾这个明目张胆的推荐算法。只要故意表现出对某个关键词的兴趣——比如多次打开巴哥的视频，或者常看看劝转行的流泪经验帖，小红书左上角的第一个推荐就会是同样的话题。这是在去年计划去重庆时，我从 gyw 的小红书上发现的——他的第一个推荐永远都是美女。另外一个特别好训练的是 YouTube 的人工智能，有时候，我甚至觉得我的兴趣都被它控制了，因为偶然看到一个拆鱼的视频，从那以后，我的主页上总有 1/3 的东亚海鲜市场视频。因为在这些我们熟悉的事情上耗费了太多的时间，毕竟，在选择将要做的事情上，大脑的本能的偏好占据了很重要的决策优先级。 RSS 全称是 Really Simple Syndication ，是一种简单易用的为用户提供信息聚合方式的格式规范。通过将想获取信息的网站的 RSS 源载入到客户端中，用户就可以在不打开网站的前提下，用阅读模式浏览文章推送，在牺牲了一些网站精美设计的同时，也让用户可以更加专注在内容上。另外，这让我们夺回了对信息源的主动权。 在搭建博客的过程中，我逐渐了解了一下 RSS 在电脑上的用法。很久之前在 Kindle 上用过（时代的眼泪），不过也没有坚持下来，主要是当时的信息来源也很单一，无非是知乎、豆瓣这些本身信息量就过载了的平台。而现在收集了很多 blog 以及网站之后，如何紧跟每个页面的更新，就成为一个相当有必要的内容。 ","date":"2022-06-14","objectID":"/20220614-rss/:1:0","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"设置流程 对使用者来说，RSS 的使用流程大致是这样的： 为了避免 RSSHub 因为使用人数过多导致的过载和延迟问题，我们使用 Heroku 来免费搭建自己的 RSSHub 的服务器 注册 Heroku 账号并完成激活 跳转到 RSSHub 模板 页面，设置部署 RSSHub 的服务器，Appname 填写你的服务器的名称，直接部署。看到下面 Deploy to Heroku 打勾以后就说明部署成功，这时点击 view 安装 RSSHub Radar 到 chrome，这是一款自动抓取订阅源的插件 把点击 view 以后出现的 url 粘贴到 RSSHub Radar 设置界面的 自定义 RSSHub 域名 一栏。在一键订阅下使用的阅读器打勾。这样可以直接把订阅源订阅到你使用的阅读器中 接下来就是快乐使用啦，我现在用的是 inoreader，注册以后，在想找订阅源的网站（比如某个b站用户的主页）点击 RSSHub，然后把订阅源传输到 inoreader 上就好了。还可以用 feedbro。 另外，有一些网站有反爬机制，我们看到的往往只是摘要，如果你使用也是 inoreader 的话，点击你想读的文章上面的这个咖啡图标，就可以爬取到全文啦。一个 RSS 阅读器如果没有爬取全文的功能，那可以说和不用 RSS 没什么两样。 如果不想让某篇文章被 rss 抓到的话，只需要在每篇文章设置里输入 hiddenFromSearch: true 就可以了 ","date":"2022-06-14","objectID":"/20220614-rss/:2:0","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"推荐阅读 这里推荐一些我订阅的栏目。有一部分还没有 RSS 的订阅接口，先写在这里，如果之后有开放接口或者我学会写了以后再更新接口的 url。另外，也可以参考 RSSHub 的官方文档查询感兴趣的路由和网站的接口信息。 ","date":"2022-06-14","objectID":"/20220614-rss/:3:0","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"科技 阮一峰的网络日志 只遗憾没有更早知道阮老师的这个博客，他的 科技爱好者周刊 知识面极广，精选后的超链接又可以让我进一步了解感兴趣的话题。在很长一段时间里都会是我的良师益友。有人吐槽他的技术文章有各种各样的问题，但我认为他的知识的准确性或许值得质疑，不过归根结底，我们也不应该期望在一个个人博客里看到多么正确权威的东西，借用一句 web3 的经典表述，do your own research，通常来讲，愿意开眼看世界的人，远少于闭门造车者。 MIT 科技评论 MIT Technology Review 在中国唯一官方授权网站。关注了热榜以后让我回忆起初中一定会买的《科学美国人》杂志。读了这么多年建筑以后，我感觉很多建筑领域的论文其难懂程度远超一些生物、物理、科技方面的前沿论文，但是，在这个榜单上几乎没有建筑方面的研究报道。 人人都是产品经理 关注这个网站并不是因为我想当产品经理（来不及了），而是发现这个站点的热门文章可以从 PM 的角度或多或少提供一些对互联网未来和当下的展望与反思。我粗浅理解的 PM 或许是互联网产业的中层枢纽，向下直达用户，向上也需要对新的热点和未来趋势有准确的判断。当然，某种程度上它的文章也有“公众号化”的趋势，这大概是简中互联网无法避免的短期未来，深度不够，广度……更是不能奢求，但好在我是外行，看什么都有意思，也无所谓非要追求多么深入浅出的内容。 少数派 之前经常在冲浪的时候看到过少数派的文章，它的 UI 还有整个的感觉会让我想到消失的 好奇心日报 ，因为是作者制的网站，文章类别比较杂，推荐类文章和测评类文章比较多。 ","date":"2022-06-14","objectID":"/20220614-rss/:3:1","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"建筑|设计 SOCKS 不用多说了，SOCKS 尽管更新速度有些慢，前一阵服务器还过期了，不过发布的内容一直都很不错，谁看谁知道。 koozArch 也是我经常看的网站，最近更新了一次页面风格。不过没有现成的 RSS 接口，学学怎么自己写吧 ","date":"2022-06-14","objectID":"/20220614-rss/:3:2","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"政治 The Funambulist 经常看的左翼线上杂志，每期的选题都很有意思，pan-africanism, weaponized infrastructure, design \u0026 racism，都是我从这个杂志上了解到的。也没有 RSS 接口 ","date":"2022-06-14","objectID":"/20220614-rss/:3:3","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Blog"],"content":"参考文献 RSSHub 的官方文档 高效获取信息，你需要这份 RSS 入门指南 ","date":"2022-06-14","objectID":"/20220614-rss/:4:0","tags":["RSS"],"title":"用RSS回到开放的互联网","uri":"/20220614-rss/"},{"categories":["Book Notes"],"content":"流水账式记录《国家篇》内容理解","date":"2022-05-22","objectID":"/the_republic_reading_note/","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Book Notes"],"content":" 阅读版本 阅读的英文版是企鹅出版社2007年出版的 The Republic ，Desmond Lee 翻译；同时对照人民出版社2017年王晓朝译本的增订版，后者直接基于希腊文文本翻译，并且有比较丰富的注释。 这个笔记的目的是详细记录 The Republic 的阅读感受和章节内容，这是因为我之前阅读了一小部分，但不做笔记的话，太容易遗忘和走神，对话的形式让人很容易从理解变成浏览，所以打算记录故事的内容，并且写一些个人的感受，难以算为文章，更像是流水账式的读书笔记。先为不好的阅读感受道歉。 ","date":"2022-05-22","objectID":"/the_republic_reading_note/:0:0","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Book Notes"],"content":"Part I Introduction ","date":"2022-05-22","objectID":"/the_republic_reading_note/:1:0","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Book Notes"],"content":"1. Prelude 苏格拉底和 Glaucon ( Ariston 的儿子)去 Piraeus 的班迪斯女神祭典上祈祷，在返回途中遇到 Cephalus 的儿子 Polemarchus，Glaucon 的兄弟 Adeimantus ，Nicias 的儿子 Niceratus 等人。Polemarchus 向苏格拉底邀约： 327c ‘Well, you will either have to get the better of us or stay here.’ ‘Oh, but there’s another alternative,’ said I. ‘We might persuade you that you ought to let us go.’ ‘You can’t persuade people who won’t listen,’ he replied. 注释 从卫城去 Piraeu s是向下走，普罗克洛将本篇第一个词 [κατέβην] ^(“向下走”) 解析为本篇”穴喻“的暗示 苏格拉底应约前往晚上的庆典。在场的还有 Polemarchus 的兄弟 Lysias，Euthydemus，Chalcedon 的 Thrasymachus， Paeania 的 Charmantides，Aristonymus 的儿子 Cleitophon，以及 Polemarchus 的父亲 Cephalus。Cephalus 是一个谦逊的老人，他厌倦了繁华和理性的对话，但苏格拉底说他更希望和老人们对话。 Cephalus是这样说的，多数老人哀叹衰老带来的失落，但他不这样认为，他举例索福克勒斯在被问到有关性的话题时，他说 329d “Don’t talk about that; I am glad to have left it behind me and escaped from a fierce and frenzied master.” Cephalus 认为如果他们遭受了生活上的不公，那么老年一定不是值得怪罪的原因，而是他们的性格作祟。这里苏格拉底还耍了个小聪明，为了引诱 Cephalus 继续说下去，他假装不认可 Cephalus 的观点 329d **I was delighted by what he said, and tried to lead him on to say more by replying ** , ‘I’m afraid that most people don’t agree [e] with what you say, Cephalus, but think that you carry your years lightly not because of your character but because of your wealth. For they say that the rich have many consolations.’ 从这里开始引出了柏拉图有关财富的辩论。Cephalus 富有却并不喜爱金钱，他的祖父拥有大量的财富，但他的父亲挥霍到只剩一部分，而他增加了这些财富，却并未达到祖父曾经的富有。柏拉图认为他并不喜爱金钱的原因是因为这些钱不是他挣的，而靠自己变得富有的人比其他人更爱金钱，因为 330c so money-makers become devoted to money, not only because, like other people, they find it useful, but because it’s their own creation. 苏格拉底接着询问财富带给他什么好处，Cephalus 认为财富可以让人有 doing right 的能力，比如偿还债务、祭祀神灵，而这让老人免于恐惧死后世界的惩罚和遗憾 331b For wealth contributes very greatly to one’s ability to avoid [b] both unintentional cheating or lying and the fear that one has left some sacrifice to God unmade or some debt to man unpaid before one dies. 但苏格拉底随后举出向疯子借来武器后，是否应该归还的例子，来质疑 doing right 该怎么定义。而 Cephalus 要离开去观看祭祀，Polemarchus 继续讨论。很明显，温和的角色引出话题，而刻薄的 Polemarchus 将会在下一章和苏格拉底唇枪舌剑地辩论一番。 ","date":"2022-05-22","objectID":"/the_republic_reading_note/:1:1","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Book Notes"],"content":"2. The Conventional View of Justice Developed 一开始苏格拉底先问 Polemarchus 对 Simonides 有关正义的观点的看法（即无论如何，应该归还每个人你的所欠之物），Polemarchus 同意这个观点，但也同意苏格拉底所举的疯人的反例，他强调所归还之物必须用来从善而非从恶，而苏格拉底又援引敌人之间相互亏欠之物，来证明 Simonides 的观点可以转译为”正义就是把对每个人 appropriate 的东西还给他。“ 接下来就是一段连珠炮般的对话，苏格拉底通过医疗和食物的例子，让 Polemarchus 说出正义给朋友提供帮助，给敌人伤害；苏格拉底进而用医生和导航者的例子，来引出正义的人在战争和结盟中最有用，而这就意味着没有战争之时，正义无用（如同没病时医生无用）。Polemarchus 反驳，正义在和平之时也有用，为了合作和契约，但仅仅正义并不能作为合格的合作者存在，Polemarchus 进一步之处在与金钱相关的事情上，正义的人是更好的合作者，并且这仅在于金钱没有被使用的情况下， 333d ‘And so in all spheres justice is useless when you are using things, and useful when you are not?’ ‘Maybe.’ 而一切事物都具有两面性，最有本事的卫兵也是最有本事的窃贼，所以正义的人也是窃钱的高手，这下彻底把 Polemarchus（和我）绕晕了。 334b So the just man turns out to be a kind of thief, a view you have perhaps learned from Homer. For he approves of Odysseus’ grandfather Autolycus who, he says, surpassed all men in stealing and lying. Justice, in fact, according to you and Homer and Simonides, is a kind of stealing, though it must be done to help a friend or harm an enemy. Is that your meaning?’ ‘It certainly isn’t,’ he replied, ‘but I don’t really know what I did mean. Yet I still think that justice is to help your friends and harm your enemies.’ 接下来，苏格拉底论证了如何定义 friend 和 enemy，达成的共识则是朋友必须看起来是好的，也是真正的好人，反之亦然。而 just man 就意味着要伤害是坏人的敌人，这意味着，so men if harmed must become more unjust 因此， 335d ‘Then will just men use their justice to make others unjust? Or, in short, will good men use their goodness to make others bad?’ ‘That cannot be so.’ …… ‘Then, Polemarchus, it is not the function of the just man to harm either his friends or anyone else, but of his opposite, the unjust man.’ 通过这样精彩的推理，苏格拉底让 Polemarchus 站到了他的同一阵线，即反驳 Simonides 等人对正义的观点，也即，正义从来不是益友伤敌，正义的人不应该伤害任何人。 Note 苏格拉底在这里使用了各种各样的职业来证明这一论述，在希腊语中，Technē 可以指代包括艺术、职业、科学等各种行业，所以他的论证过程看似游移不定，但在当时的语境下，仅仅围绕着 Technē 相关的社会的基础和结构核心，驳斥了虚无缥缈的正义有关的观点。 ","date":"2022-05-22","objectID":"/the_republic_reading_note/:1:2","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Book Notes"],"content":"3. Thrasymachus and the Rejection of Conventional Morality 1. First statement and Criticisms 苏格拉底质疑了传统道德的谬误之处，咄咄逼人的 Thrasymachus 全盘否定，认为人的行为由且仅由其自身利益决定，亦即“强者的利益”。而苏格拉底用一串精彩的论证（我认为这比上一节要精彩的多，Thrasymachus 迫使苏格拉底回应得更加简洁明确）证明任何一个 Technē 都为另一些 Technē 提供有益的东西，而同时它们也缺少某些东西，而任何一个 Technē 都不寻求自身的利益，因为他们自身没有这种需要，他们寻求的是需要这个 Technē 的事物的利益。因此，强者（统治者）寻求的是被统治者的利益，他掌握的 Technē 的对象是他的臣民，而不是他自己。 Thrasymachus 不允许苏格拉底将权力解释为一种权利、义务或利益，而是要给出明确的定义，苏格拉底说，如果你问人十二是什么，而你又不许人回答是六的两倍，三乘四，四乘三，那么没人能回答这样的问题。Thrasymachus 说如果你要从我禁止的答案中选择一个回答，那么如果我想出来更好的答案，你就得付钱，Glaucon 愿意替苏格拉底付钱。Thrasymachus 说苏格拉底就是这样，自己不提供答案，而只是驳斥他人的答案 338d ‘Listen then,’ he replied. ‘I say that justice or right is simply what is in the interest of the stronger party. Now where is your praise? I can see you’re going to refuse it.’ ‘You shall have it when I understand what you mean, which at present I don’t. You say that what is in the interest of the stronger party is right; but what do you mean by interest? For instance, Polydamas the athlete is stronger than us, and it’s in his interest to eat beef to keep fit; we are weaker than him, but you can’t mean that the same diet is in our interest and so right for us.’ ‘You’re being tiresome, Socrates,’ he returned, ‘and taking my definition in the sense most likely to damage it.’ ‘I assure you I’m not,’ I said; ‘you must explain your meaning more clearly.’ 在这里其实 Thrasymachus 代表了一些读者眼里诡辩狡猾的苏格拉底，苏格拉底提出当 Thrasymachus 口中的 stronger people 犯了错误时，那么遵从这种错误的决定，进而损害他们自身的利益， it is right to do things that are not in the interest of the rulers 。Thrasymachus 发现了苏格拉底的企图，当人们说到医生时，抽象的概念的医生是不会犯错的，而现实中的医生则会出错，这种作伪证的手法无助于问题的讨论。 苏格拉底接下来说，这世界上任何一种技能、职业，都是有缺陷的，因为它们总需要另一个东西来完善自己，医疗对身体有益，耳朵需要听力，技能从不寻求自己的利益——因为技能没有利益，而是服务于它的对象的利益。 342c ‘Then no science studies or enforces the interest of the controlling or stronger party, but rather that of the weaker party subjected to it.’ 那么，没有任何知识寻找或规定对它自身有益的东西，而是寻找或规定臣服于它的弱者的利益（王晓朝译） 所以，真正的医生不会寻求自己的利益，而是寻求他的病人的利益。 342d ‘Then it follows that the doctor qua doctor prescribes with a view not to his own interest but that of his patient. For we agreed that a doctor in the precise sense controlled the body and was not in business for profit, did we not?’ He assented. ‘And did we not also agree that a ship’s captain in the precise sense controlled the crew but was not one of them?’ He agreed. ‘So that a captain in this sense is in control, but will not give his orders with his own interest in view, but that of the crew which he controls.’ He agreed reluctantly. ‘And therefore, my dear Thrasymachus,’ I concluded, ‘no ruler of any kind, qua ruler, exercises his authority, whatever its sphere, with his own interest in view, but that of the subject of his skill. It is his subject and his subject’s proper interest to which he looks in all he says and does.’ 2. Second Statement and Final Refutation Thrasymachus 总结了自己的两个观点： political power 就是一个阶级对另一个阶级的剥削。Ordinary morality is simply the behaviour imposed by exploiter on exploited, and is thus ‘someone else’s interest’. 在日常生活中，对自我利益的追求是完全合法，并且对个人来讲最为有利的。 Thrasymachus 用经典的牧羊人的例子，提出利益才是驱使牧羊人的关键，而不是对羊的利益的关切。而 just man 是为了他者的利益而活，不义则正相反， 343d the just man always comes off worse than the unjust. 正义的人会因为迂腐的个人原则，一点好处也捞不到，而极致的行不义者就是暴君。 343d For, of course, those who abuse wrongdoing and injustice do so because they are afraid of suffering from it, not of doing it. 人们之所以谴责不正义不是因为害怕行不义之事，而是因为害怕承受不义之事。（王晓朝译） 这时候 Thrasymachus 打算离开（柏拉图用心描绘了一个固执的形象），苏格拉底道德绑架了他，希望让他来为他们答疑解惑，带领他们走上正确的道路。不得不说，在这些时候苏格拉底甚至有些用心险恶，他知道自己有着主角光环，想尽办法引诱与他意见不合的人继续和他对话，最终瓦解他们的观点。比如接下来，苏格拉底发现了 Thrasymachus 论证的前后不合之处：在更早以前，他同意医生的目的是为了病人的利益，而这时他却说牧羊人是为了自己的利益（这两点之所以可以类比，或许也和 Technē 有关），而 Thrasymachus 的牧羊人为了自己利益而活的描述，更像在描述商人，而非牧羊人。可这不过是一些小破绽。 345e But tell me, do you think that the rulers of states (rulers in the true sense, that is) really want to rule?’ ‘I don’t think it, I know it,’ he replied. ”……但是，你认为，那些统治城邦的人，那些真正的统治者，很乐意统治吗？“ ”我不这样看，宙斯在上，我知道他们不乐意。“（王晓朝译） 统治者竟然不乐于统治？读到这里，我有些意外他们在这里达成了共识，所以你要告诉我那些喷薄而出的暴君、庸人、婴儿和沽名钓誉者不乐于那宝座？或者说这些人并不在真正的统治者的范围里。","date":"2022-05-22","objectID":"/the_republic_reading_note/:1:3","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Book Notes"],"content":"4. Adeimantus and Glaucon Restate the Case for Injustice 在上一节中，Thrasymachus 以落败者的形象退场，看起来，苏格拉底胜利了。但事实上，从读者的角度来看，我们很难轻松地认可苏格拉底的论述，尽管他的问答步步为营，逻辑滴水不漏，但他还没有解决一个非常重要的问题：世界上太多不义之人用卑劣的手段得到了利益，从结果来看，行不义者依旧是比秉持正义的人拥有太多，该如何看待这个事实？另外，上节给人一种苏格拉底刻薄的形象，因此，Glaucon 和 Adeimantus 在这里温和地继承了 Thrasymachus 的观点，要求苏格拉底继续说服他们。 Part I: Glaucon Glaucon 认为人们为自己谋取利益是天经地义的，而对正义、道德感的追求都应该让位于利益。道德感之所以出现在人类社会，是因为社会不能接受所有人的自私，必须让渡并限制一部分个人权利，因此，道德感是妥协的产物。 Glaucon 阻止了 Thrasymachus 离场，他夺过反对苏格拉底的阵地，并且开始反问苏格拉底问题 357b ‘Do you want our conviction that right action is in all circumstances better than wrong to be genuine or merely apparent?’ ‘If I were given the choice,’ I replied, ‘I should want it to be genuine.’ Glaucon 首先让苏格拉底承认在任何场合下，正确的行为都在绝对意义上优于错误的行为。Glaucon 按照目的将 good 拆分为了一组概念，为了它本身而不是它的影响的 good, 例如 enjoyment or pleasure ；既为了它本身也为了它的影响的 good, 例如 wisdom and sight and health ；为了它的影响而不是为它本身的 good, 例如 exercise and medical treatment 。而苏格拉底认为，justice and right 是在第二个分类中，也是最高级的分类中的。然而，读者们在内的众人却更多认为它们应该被放置在第三类中——痛苦却带来好的结果的 good。 Glaucon 接着更新了 Thrasymachus 的观点为三个部分： 大众眼中 justice 的天性与起源 人们在行善的时候，往往是由于受到某种程度的强迫，而不是为了行善 第 2 点的现象是正常的，不义之人的确比正义的人享有更好的生活 Glaucon 坦诚他并非完全相信这一切，但 Thrasymachus 在内的许多人却不断给他灌输这样的观念。事实上，Glaucon 这里代表的正是大多数人，他们在内心深处认可正义，却受到社会现象和思想的负面影响，不得不默许大众观点的切实成立。Glaucon 因此决定彻底成为大众声音的代言人，他将试图扮演歌颂不义的角色，来让苏格拉底提出值得信服的解释。 大众眼中 justice 的天性与起源 这里 Glaucon 首先给出了一个我没看懂的观点 358e What they say is that it is according to nature a good thing to inflict wrong or injury, and a bad thing to suffer it, but that the disadvantages of suffering it exceed the advantages of inflicting it. 王晓朝的译本里，也译为“行不正义是天然的善，承受不正义是天然的恶”，为什么这里“行不正义是天然的善”呢？或者是说，人的本性是利己的，这是善；但因为他人利己而导致自己利益遭受损失的，这是恶。因为善恶的不可协调，人们制定了法律和协议，而这就是正义的起源。因此，正义本身就是一种妥协的产物。 人们在行善的时候，往往是由于受到某种程度的强迫，而不是为了行善 人们之所以行善，在于他们不能行恶。Glaucon 举例了一个场景，一个正义之人和一个不义之人被给予了行事自由的权利，而我们会发现，正义的人会因为私欲而损害他人。Glaucon 这里用了完美的 Gyges 的例子来说明这个观点的正确性，牧羊人 Gyges 从地狱中偷走了一个金戒指，当他发现戒指有隐身的能力之后，开始用戒指盗窃、偷情、篡权。权力带给人的变化。 第 2 点的现象是正常的，不义之人的确比正义的人享有更好的生活 Glaucon 首先对比了极端案例——绝对正义的人和绝对不义的人。绝对不义的人首先是不义方面的绝对专家，他清楚自己在每件事上应持的立场取决于这件事与自己利益的关系，那么，完美的不义者一定在背地里行不义，同时表面极度良善，他一定乐于行善，慷慨解囊，因为他给神祗们的贡品最多，神祗们也会保护他；反之，完美的正义者一定私下里四处行善，而表面上是极度的恶人，因为他秉持正义不是为了他自己的利益，而是为了别人的利益，而正义的名声会带来利益，因此他会伪装成令人厌恶的不义之人，这才是一个绝对的利他主义者。最终的结果是，不义之人比正义之人的生活中回报更多，也更加快乐。这里 Glaucon 没有采取 Thrasymachus 用双方的实际行为的差异来表达观点的方式，而是从表象出发，从两种极端形象会为了自己的身份 image 采取的行动，来反推生活上所享有的快乐的多少。 Part II: Adeimantus Glaucon 的兄弟 Adeimantus 接着 Glaucon 的论述继续往下说，他认为人们行恶可以得到很多东西，而行善的所得一定少于行恶，而且，宗教鼓励人们行恶，因为宗教告诉人们他们可以通过给神祗的慷慨献金来抵消本世的罪恶，而下世的开始又将清空循环，因此，Adeimantus 要求苏格拉底讲明白，行善的目的是什么，而这个目的不能是任何外在的奖惩。 Adeimantus 的观点同样十分现实，人们之所以教导其他人行正义之事，往往也是看重行正义之事带来的名声和荣誉，赫西俄德和荷马都描述过上帝对正义之人的嘉奖。在现实世界里，Glaucon 描述的极度正义的人会遭受的刑罚，还是会落在不义者的身上。 另一方面，在世人的印象中，正义之路是崎岖的，不义之路是平坦的，正义带来痛苦、折磨和忍耐力，不义带来的是财富、快乐和轻松的生活。在宗教里，传福音的人会因为一些报酬而为任何一个富人消除他曾行的不义之事。而这一切都会让青年用品达的诗句质问自己 365b Shall I by justice reach the higher stronghold, or by deceit 人们终会被打败，这会导致人们伪装成为正义的人，却在私下里或者是秘密社团中大肆行恶。熟练的人可以伪装骗过所有人，那么众神呢？如果众神关注我们，他们就不会允许宗教贪污和收买的现象发生，而如果宗教都不关心我们，还有什么必要担心他们？相信众神的人，行恶之后只需要慷慨解囊献祭众神。如此一来，将不会有人行正义之事。Adeimantus 的论述其实是从信念的角度分析了这样一个信仰崩塌的社会将注定走向虚伪的正义和隐藏的恶之路。 Simonides appearance has more force than reality，表象会用暴力战胜真理。这被推断为是前面提到过的 Simonides 的诗句。 其实 Glaucon 和 Adeimantus 的立场是非常理性的，他们基于冲动的 Thrasymachus 的观点，从表象的方面否定了正义。他们并不追求驳倒苏格拉底，而是希望让苏格拉底给出令人信服的解释，否则隔靴搔痒的争论对社会的未来毫无裨益。他们在最后总结了苏格拉底到目前为止的观点以及其缺陷： 苏格拉底仅仅论证了正义强于不正义。然而，他并没有剥离外在因素的作用，那么他在事实上鼓励人们为了名声追求表面的正义。否则的话苏格拉底将 367c you agree with Thrasymachus that justice is what is good for someone else, the interest of the stronger party, while injustice is what is to one’s own interest and advantage, and pursued at the expense of the weaker party. 苏格拉底同意正义应该归属于既为了它本身也为了它的影响的 good。而这并未解释清楚正义能给人带来的好处，和不义能给人带来的坏处。 第一部分完 See you later 持续更新.. ","date":"2022-05-22","objectID":"/the_republic_reading_note/:1:4","tags":["Book Notes"],"title":"The Republic - Plato 读书笔记","uri":"/the_republic_reading_note/"},{"categories":["Blog"],"content":"汇总了一些操作过程中遇到的问题，另外记录一些常用操作免得忘记","date":"2022-05-21","objectID":"/first-post/","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":" 打算搭建博客的想法已经有两三年了，一直到最近对代码不再一无所知，而且待业在家才终于决定着手搭建一个简单的博客。之前大概看过 Squarespace、Cargo 这类 SaaS 平台，考虑到 第一点：这类平台价格太贵，用来做作品集比较划算，只是做博客的话其实没有必要 第二点：可玩性不高，作为比较成熟的建站平台，完善的用户体验带来的是弱DIY感 所以最近在网上冲浪的时候偶然发现 Hugo + GitHub Pages 搭建博客好像并不是很难，用了大概三天时间成功让博客能打开了（其实全过程只需要不到二十分钟…但是遇到了一些奇怪的问题，大概重复了快十次才搭建成功）。这里主要记录一下：搭建流程、遇到的问题。 ","date":"2022-05-21","objectID":"/first-post/:0:0","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"基本操作流程 安装 Hugo开源静态网站生成工具 和 Git开源分布式版本控制系统； 在 GitHub 新建 Repository； 通过 Hugo 搭建本地的博客文件框架，之后用 Git 推到 GitHub 上 ","date":"2022-05-21","objectID":"/first-post/:0:1","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"安装Hugo \u0026 Git Hugo的安装在：Install Hugo 有详细指南，或者直接在 Hugo GitHub Release Page 下载最新版的extended版本，我在2022/05/21安装的是 hugo_extended_0.99.1_Windows-64bit.zip ，解压后把hugo.exe文件放到指定的安装目录，比如D:/Program Files/Hugo/bin，然后打开**win+R → sysdm.cpl → Advanced → Environment Variables → System variables - path ** 添加进去，命令行输入Hugo version 如果显示则成功 直接下载 Git 一路下一步 ","date":"2022-05-21","objectID":"/first-post/:0:2","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"GitHub新建仓库 作为为了博客才注册GitHub的真正新手，大概理解GitHub是怎么工作的耗费了不少调整的时间，光是不断重头再来新建仓库就做了十遍有余。 新建一个库，这里注意三点： Repository name必须是username.github.io，用户名大小写不敏感 添加一个README文档，倒也不那么重要就是了 新手踩坑，这里设置了  main 作为默认分支，但搭建博客的很多教程依旧基于 master 的分支来同步文档。这是因为2020年10月1日以后 Github 把新建仓库的默认分支从 master 改为 main 了，其实只需要在仓库的设置里把 branch 和 pages 中的有关设置从 main 改为 master 即可 另外这里可以注意一下 SSH 的问题，网上教程很多，出现问题修改一下就行 ","date":"2022-05-21","objectID":"/first-post/:0:3","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"生成Hugo的网站文件 新建Hugo网站 新建一个最顶层的文件夹用来放置所有相关文档，比如E://HugoWebsite 在命令行输入 hugo new site [blog folder name] ，生成一套文件框架 选择主题，我直接使用的是 LoveIt # 切换目录到博客文件夹 cd [blog folder name] # 切换到主题文件夹 cd themes # 下载主题 git clone https://github.com/dillonzq/LoveIt.git LoveIt 修改根目录下的 config.toml , LoveIt作者的基本概念 里的 2.3 基础配置 和 3.1 网站配置 两个部分基本囊括了可以修改的部分，直接复制到 config 中，修改需要修改的部分即可。这里需要注意这连个部分的配置参考中有重复的部分，[markup] 的部分就有所重合 另外， config.toml 中修改头像的话，相对路径指的是blog根目录下的 static 文件夹，例如，在 config.toml 中头像的地址为 /images/avatar.png ， 那么它的绝对路径为 E://HugoWebsite/[Blog Folder name]/images/avatar.png 图片压缩的快捷操作是用 ffmpeg , 在命令行中切换到图片所在文件夹后，使用 ffmpeg -i input.jpg -vf “scale=1920:-1” output.jpg 就可以等比例调整图片大小，再也不用打开PhotoShop了 作出修改 ​ 通常会修改一些配置文件，或者新建or修改博客文章 #1.在blog name的根目录里右键打开 Git Bash Here #2.注意不同主题存放博客的位置不同，例如LoveIt存放在posts中，因此使用hugo new posts, 而其他一些主题可能存放在post或者其他名字的文件夹下 hugo new posts/first-post.md #3.打开hugo server来预览效果，localhost:1313/ hugo server -D #4.注意，如果有博客中draft为true的话，这里使用hugo serve 是看不到新建的博文的，另一种方式是 hugo serve --buildDrafts， 目的都是overwrite这里draft的参数，但是在在线版本还是要记得修改draft的值为false #5.如果一切ok的话ctrl+C，之后生成Public文件夹下的用来同步的文件结构 hugo #6.这一步结束后应该会出现public文件夹，里面的文件就是打算部署的版本 ","date":"2022-05-21","objectID":"/first-post/:0:4","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"部署到GitHub远程仓库 第一次运行需要 # 在Bash中进入public，初始化git库 git init # Initialized empty Git repository in ... # 把git本地仓库关联到远程仓库 git remote add origin git@github.com:[username]/[username].github.io.git # 查看修改状态 git status # 添加修改过的文件，这里.也可以替换为-A，其实这一步我一开始失败了很多次，修改了config文件以后git add并不会增加修改后的文件，后来不知道多了哪一步操作以后就好了 git add . # 添加提交内容说明信息，推荐\"yyyy/mm/dd-hh:mm\" git commit -m \"first commit\" # 提交修改 git push -u origin master # 这里有可能第一次失败，事实是我也遇到过一次，但后来就没有再出现，出现这样的问题可以参考“渣渣的夏天”的说明 #另外，如果在 push 的时候提示fatal: unable to access ‘https://github.com/...‘，一般是因为服务器的 SSL 证书没有经过第三方机构签署，因此报错，解决方法是解除 SSL 验证就好了，使用下句 git config --global http.sslVerify \"false\" 修改 repository 地址 # 有时 repository 地址更改，或者填错的情况下，可以移除旧的 origin git remote rm origin # 查看是否清除 git remote -v # 添加新的 origin git remote add origin master https://....../R.git 修改某些设置后没有更新 在 xwi88 和毛哥的帮助下，我终于解决了 giscus 的问题。首先切换到 production 看看是不是解决了问题。如果此时预览实现了更改，而 push 到 GitHub 的页面却没有更新，问题可能是 public 文件夹下一些 css 、js 等文件没有实时更改 # 首先使用以下命令可以让预览切换到 production 模式 hugo server -w -e production -DF 解决方法是可以手动删除 public 文件夹下除了 .git 文件夹以外的全部内容，然后再重新 hugo 生成文件夹，这样修改应该就生效了。 ","date":"2022-05-21","objectID":"/first-post/:0:5","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"日常操作 新建或修改文章 # 当前工作目录：E:\\HugoWebsite\\[Blog Folder Name] # 新建文章 hugo new posts/Second.md #修改 # 本地预览 hugo server -D # 构建网站文档 hugo # 切换目录 cd public git add . git commit -m \"yyyy/mm/dd-hh:mm\" git push origin master 删除文章 # 当前工作目录：E:\\HugoWebsite\\[Blog Folder Name] # 在blog/content/posts，blog/public下找到文章删除，后者并不重要，因为public中除了.git文件夹以外的文件都会在hugo命令中重建 hugo server -D hugo cd public git add . git commit -m \"yyyy/mm/dd-hh:mm\" git push origin master ","date":"2022-05-21","objectID":"/first-post/:0:6","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"其他操作 添加favicon 给网页增加一个icon图标，在标签页和书签栏都可以有更个性化的显示。 首先在 favicon generator 里可以上传自己选择的图片（260*260左右），然后一路下一步，在这里下载package 把package里的东西解压到/themes/LoveIt/exampleSite/static/ （不同主题可能路径不同，我也是试了很多次，只要找到每个 static 不停地试就差不多），官方文档里只需要放在 /static 目录，不过我失败了，不知道是什么问题。至于底下这段代码，Bright’s Blog 说可以复制到某个html文件里，但 LoveIt 不需要，如果用前面的步骤没有显示也可以试试 最后 Hugo Server -D 察看有没有更改成功就好了 admonition用法 一共12个样式，用起来很方便，这里用到了 shortcodes 的扩展 {{\u003c admonition type=tip title=\"the name you want\" open=true \u003e}} Write something here {{\u003c /admonition \u003e}} # 或者 {{\u003c admonition tip \"the name you want\" true \u003e}} Write something here {{\u003c /admonition \u003e}} Note type = note Abstract type = abstract Info type = info Tip type = tip Success type = success Question type = question Warning type = warning Failure type = failure Danger type = danger Bug type = bug Example type = example Quote type = quote 设置评论区 评论区的设置有很多选择，我尝试过 Gitalk、 Valine简洁高效的无后端评论系统、Waline ，每个都出现了一些小问题，Valine 是评论区始终不显示，而且据说容易被匿名攻击；而 Waline 则是评论区始终加载，或许是渲染上的冲突，实在没找到修改办法。本来我是想做可以免注册或者只需要简易注册的评论系统，但问题太多。本意是考虑到 GitHub 可能并不是人人都有，没有办法，最后只好选择 GitHub 托管的评论插件 giscus，不过 giscus非常好用，基本十分钟设置完成。 在 Github 上新建公开仓库，参考 GitHub Discussions 快速入门 ， Repository → Settings → Features → Set up discussions → Start a new discussion 安装 giscus 可以配置只选择存放评论的仓库，在 giscus配置页面 设置你的偏好，用来生成需要的代码，仓库 填写 username/repository_name ， 页面discussion映射关系 选择 pathname ，分类就是默认的 announcements 然后复制下面的代码，注意 data-repo 、data-repo-id 、 data-category 、 data-category-id 有没有自动生成 在根目录的 /layouts/partials/ 新建 comment.html （其他主题有可能是 comment ，查看主题文档即可）把第二步生成的代码复制进去 这样就设置完成了，用户只需要登陆 GitHub 账号就可以评论，评论的内容存储在创建的仓库里 目前还有一个问题是主题切换时 giscus 不能自动更新 图片并排显示 Markdown 语法并不注重排版，所以图片设置中经常会出现各种令人难受的问题。如果想要让两三张图片并排显示的话，就需要用到 html 标签实现。 单张居中 \u003ccenter\u003e \u003cimg src=\"http://dreamofbook.qiniudn.com/Zero.png\"\u003e \u003c/center\u003e 固定宽度/高度，增加图注 \u003cimg src=\"http://xxx.jpg\" title=\"Logo\" width=\"100\" /\u003e # height=\"1080\" 并排居中显示 \u003ccenter class=\"third\"\u003e # class=\"half\" 是两张并排 \u003cimg src=\"http://xxx.jpg\"\u003e \u003cimg src=\"http://yyy.jpg\"\u003e \u003cimg src=\"http://zzz.jpg\"\u003e \u003c/center\u003e 图片放大功能 LoveIt内置了 Lightgallery 的设置，但是不知道是不是长期没有维护的原因（作者最近突然打算开始维护了！），即便在 config.toml 中打开 Lightgallery 也并不会打开图片放大功能。后来参考Github Pages + Hugo 搭建个人博客 大佬用 jqury 和 fancybox 实现了简单的图片放大效果。 把主题中 /themes/LoveIt/layouts/partials/footer.html 复制到根目录下 /layouts/partials/ 然后在最后加上： \u003cscript src=\"https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js\"\u003e\u003c/script\u003e \u003clink rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css\" /\u003e \u003cscript src=\"https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js\"\u003e\u003c/script\u003e 每次增加图片的时候修改一下代码，在插入图片的位置使用 \u003ca data-fancybox=\"gallery\" href=\"/pic_dir/picname.png\"\u003e\u003cimg src=\"/pic_dir/picname.png\"\u003e\u003c/a\u003e 访客统计功能 统计文章阅读次数用插件 busuanzi 就可以实现，Hugo 网站访问计数插件不蒜子集成 这个教程讲的很详细，有以下几个需要配置的地方。 配置文件修改 # xwi88 自定义配置 xwi88Cfg [params.xwi88Cfg] [params.xwi88Cfg.summary] update = true # summary 更新日期显示 [params.xwi88Cfg.page] update = true # pages 更新日期显示 [params.xwi88Cfg.busuanzi] enable = true # custom uv for the whole site site_uv = true site_uv_pre = '\u003ci class=\"fa fa-user\"\u003e\u003c/i\u003e' # 字符或提示语 site_uv_post = '' # custom pv for the whole site site_pv = true site_pv_pre = '\u003ci class=\"fa fa-eye\"\u003e\u003c/i\u003e' # site_pv_post = '\u003ci class=\"far fa-eye fa-fw\"\u003e\u003c/i\u003e' site_pv_post = '' # custom pv span for one page only page_pv = true page_pv_pre = '\u003ci class=\"far fa-eye fa-fw\"\u003e\u003c/i\u003e' page_pv_post = '' 在根目录 /layouts/ 从主题文件复制对应文件到 /layouts/_default/summary.html , /layouts/partials/footer.html ， /layouts/partials/plugin/busuanzi.html（新建)，/layouts/posts/single.html 接下来逐一修改 在 /layouts/_default/summary.html 文件中 # 基于原有的时间格式修改，首先删除原有日期显示 #{{- with .Site.Params.dateFormat | default \"2006-01-02\" | .Lastmod.Format -}} #\u0026nbsp;\u003cspan class=\"post-publish\"\u003e {{- printf `\u003ctime datetime=\"%v\"\u003e%v\u003c/time\u003e` . . | dict \"Date\" | T #\"updatedOnDateLower\" | safeHTML -}} #\u003c/span\u003e #然后增加 xwi88 的配置 {{- /* xwi88 config */ -}} {{- if .Site.Params.xwi88Cfg.summary.update -}} {{- with .Site.Params.dateFormat | default \"2006-01-02\" | .Lastmod.Format -}} \u0026nbsp;\u003cspan class=\"post-publish\"\u003e ","date":"2022-05-21","objectID":"/first-post/:0:7","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"查阅文档 Markdown基本语法 和Markdown速查表 LoveIt主题作者的博客 以及两篇基本文档基本概念 内容 (内有一些特殊的扩展语法) 中文文案排版指北 ","date":"2022-05-21","objectID":"/first-post/:0:8","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"Reference Github Pages + Hugo 搭建个人博客 搭建教程 用Git Pages加Hugo搭建个人博客全记录 讲了域名的流程以及切换到 docs 的好处，之后再看 如何利用 GitHub Pages 和 Hugo 轻松搭建个人博客？ 评论值得一看，可能会有一些问题的解答 Hugo - 10分钟搭建 \u0026 部署个人网站/博客，简历中的博客网站怎么建 视频 Hugo静态网站生成器中文教程 主题不同，也有一些新的功能指南 Hugo系列(3.2) - LoveIt主题美化与博客功能增强 · 第三章 超长文，值得研究 Hugo+Loveit优化记 优化 Hugo + LoveIt 风月的博客，Hugo的教程，也很长 Hugo框架中文文档 短代码 给Hugo个人博客添加Valine评论系统 Hugo搭建博客（一）— 基本设置 [转] 使用Waline搭建博客评论系统 写了很详细的 vercel 配置指南 Hugo系列(3.1) - LoveIt主题美化与博客功能增强 · 第二章 Waline 替代 Valine 的评论系统 博客评论系统从 Utterances 迁移到 Giscus 迁移博客评论系统从Utteranc.es到Giscus Hugo Plugin Giscus Support 手把手教你如何用Hugo构建个人静态博客(六) 另一种方法引入 giscus Hugo的文件配置和博客功能增强(一) 修改 _custom.scss 的方法美化 LoveIt 博客搭建过程（二） 使用 Hugo 和 GitHub Pages 搭建并部署一个静态博客网站 写了 PaperMod 下 giscus 怎样实现主题自动切换 Markdown 简明语法参考 以后放不下图片可以参考图床的使用 Hugo 网站访问计数插件不蒜子集成 使用Hugo框架搭建博客的过程 - 主题配置 构建自己的博客系统 设立一个终极目标吧！未来自己构建博客系统！ ","date":"2022-05-21","objectID":"/first-post/:0:9","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"},{"categories":["Blog"],"content":"总结 就目前来看，博客是具有实用性的，但市面少有好用的产品，或者是古旧的新浪博客，或者就是这种需要一定代码的方式，但后者对于非技术专业的新手来说还是有些复杂。以我为例，修改 config 和 html 文件还算颤颤巍巍能搞得来，但 giscus 要修改 json 和 css 的时候是真的懵逼了。 在博客的书写中要注意兼顾Markdown语法和书写规范，即便是个人博客，也不要增加阅读上的困难，例如明确区分中英文混杂的写作规则，避免使用错误的缩略语，避免使用流行语，避免自我审查。 之后需要搞定切换主题和设置第二个库的方法，或许可以拿来做作品集网站。 Hugo server 默认环境是 development , 而 Hugo 的默认环境是 production ，值得注意。 ","date":"2022-05-21","objectID":"/first-post/:0:10","tags":["Blog"],"title":" Hugo + GitHub Pages 搭建博客备忘录","uri":"/first-post/"}]